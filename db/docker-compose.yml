version: '3.9'
services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: guns_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 10

  data_loader:
    container_name: data_loader
    build:
      context: ..
      dockerfile: ./db/data_loader.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    environment:
      POSTGRES_DB: guns_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
  
  backend:
    container_name: backend
    build:
      context: ..
      dockerfile: ./src/app/backend/backend.Dockerfile
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      data_loader:
        condition: service_completed_successfully
    environment:
      POSTGRES_DB: guns_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
  
  frontend:
    container_name: frontend
    build:
      context: ..
      dockerfile: ./src/app/frontend/frontend.Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - backend
    environment:
      BACKEND_HOST: localhost
      BACKEND_PORT: 8000
    extra_hosts:
      - "host.docker.internal:host-gateway"

    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pg.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - 5050:5050
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
